name: Reusable workflow to deploy image to ECS

on:
  workflow_call:
    inputs:
      image:
        description: "Full URI of the image currently residing in ECR"
        required: true
        type: string
      ecs-cluster: 
        description: "Name of the ECS Cluster"
        required: true
        type: string
      container-name: 
        description: "Name of the container"
        required: true
        type: string
    secrets:
      role-to-assume: 
        description: "Role to assume for GitHub OICD"
        required: true
      ecs-service: 
        description: "Name of the ECS Service"
        required: true
      github-clone-pat:
        description: "GitHub PAT secret for cloning the repository in which the Task Definitions reside"
        required: true

env:
  AWS_REGION: us-east-1

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout Task Definition Repository
      uses: actions/checkout@v3
      with:
        repository: galileo-inc/cicd-poc-task-definitions
        token: ${{ secrets.github-clone-pat }}
        ref: v0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        audience: sandbox
        role-to-assume: ${{ secrets.role-to-assume}}
        aws-region: ${{ env.AWS_REGION }}
        mask-aws-account-id: no

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: render-task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definitions/task-definition.json
        container-name: ${{ secrets.container-name }}
        image: ${{ inputs.image }}

    - name: Deploy Amazon ECS task definition
      id: deploy-task-def
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.render-task-def.outputs.task-definition }}
        service: ${{ secrets.ecs-service }}
        cluster: ${{ secrets.ecs-cluster }}
        wait-for-service-stability: true
